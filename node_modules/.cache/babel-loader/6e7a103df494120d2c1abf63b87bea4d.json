{"ast":null,"code":"export function calcColorChannels(c) {\n  let rawColor = c.replace('#', '');\n\n  if (/^[0-9a-fA-F]{3}$/.test(rawColor)) {\n    rawColor = rawColor[0].repeat(2) + rawColor[1].repeat(2) + rawColor[2].repeat(2);\n  }\n\n  if (/^[0-9a-fA-F]{6}$/.test(rawColor)) {\n    return {\n      red: parseInt(rawColor.slice(0, 2), 16),\n      green: parseInt(rawColor.slice(2, 4), 16),\n      blue: parseInt(rawColor.slice(4, 6), 16)\n    };\n  }\n\n  return {\n    red: 255,\n    green: 255,\n    blue: 255\n  };\n}\nexport function mixColor(color, percent = 0.2) {\n  let {\n    red,\n    green,\n    blue\n  } = calcColorChannels(color);\n\n  if (percent > 0) {\n    red *= 1 - percent;\n    green *= 1 - percent;\n    blue *= 1 - percent;\n  } else {\n    const value = Math.abs(percent);\n    red += (255 - red) * Math.abs(percent);\n    green += (255 - green) * value;\n    blue += (255 - blue) * value;\n  }\n\n  return `rgb(${Math.round(red)}, ${Math.round(green)}, ${Math.round(blue)})`;\n}\nexport function lighten(color, percent = 0.2) {\n  return mixColor(color, -percent);\n}\nexport function darken(color, percent = 0.2) {\n  return mixColor(color, percent);\n}","map":{"version":3,"names":["calcColorChannels","c","rawColor","replace","test","repeat","red","parseInt","slice","green","blue","mixColor","color","percent","value","Math","abs","round","lighten","darken"],"sources":["/home/haibara/ghq/github.com/w-haibara/kakemoti-ui/node_modules/element-plus/es/utils/color.js"],"sourcesContent":["export function calcColorChannels(c) {\n    let rawColor = c.replace('#', '');\n    if (/^[0-9a-fA-F]{3}$/.test(rawColor)) {\n        rawColor =\n            rawColor[0].repeat(2) + rawColor[1].repeat(2) + rawColor[2].repeat(2);\n    }\n    if (/^[0-9a-fA-F]{6}$/.test(rawColor)) {\n        return {\n            red: parseInt(rawColor.slice(0, 2), 16),\n            green: parseInt(rawColor.slice(2, 4), 16),\n            blue: parseInt(rawColor.slice(4, 6), 16),\n        };\n    }\n    return {\n        red: 255,\n        green: 255,\n        blue: 255,\n    };\n}\nexport function mixColor(color, percent = 0.2) {\n    let { red, green, blue } = calcColorChannels(color);\n    if (percent > 0) {\n        red *= 1 - percent;\n        green *= 1 - percent;\n        blue *= 1 - percent;\n    }\n    else {\n        const value = Math.abs(percent);\n        red += (255 - red) * Math.abs(percent);\n        green += (255 - green) * value;\n        blue += (255 - blue) * value;\n    }\n    return `rgb(${Math.round(red)}, ${Math.round(green)}, ${Math.round(blue)})`;\n}\nexport function lighten(color, percent = 0.2) {\n    return mixColor(color, -percent);\n}\nexport function darken(color, percent = 0.2) {\n    return mixColor(color, percent);\n}\n"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA2BC,CAA3B,EAA8B;EACjC,IAAIC,QAAQ,GAAGD,CAAC,CAACE,OAAF,CAAU,GAAV,EAAe,EAAf,CAAf;;EACA,IAAI,mBAAmBC,IAAnB,CAAwBF,QAAxB,CAAJ,EAAuC;IACnCA,QAAQ,GACJA,QAAQ,CAAC,CAAD,CAAR,CAAYG,MAAZ,CAAmB,CAAnB,IAAwBH,QAAQ,CAAC,CAAD,CAAR,CAAYG,MAAZ,CAAmB,CAAnB,CAAxB,GAAgDH,QAAQ,CAAC,CAAD,CAAR,CAAYG,MAAZ,CAAmB,CAAnB,CADpD;EAEH;;EACD,IAAI,mBAAmBD,IAAnB,CAAwBF,QAAxB,CAAJ,EAAuC;IACnC,OAAO;MACHI,GAAG,EAAEC,QAAQ,CAACL,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,EAAuB,EAAvB,CADV;MAEHC,KAAK,EAAEF,QAAQ,CAACL,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,EAAuB,EAAvB,CAFZ;MAGHE,IAAI,EAAEH,QAAQ,CAACL,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAD,EAAuB,EAAvB;IAHX,CAAP;EAKH;;EACD,OAAO;IACHF,GAAG,EAAE,GADF;IAEHG,KAAK,EAAE,GAFJ;IAGHC,IAAI,EAAE;EAHH,CAAP;AAKH;AACD,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,OAAO,GAAG,GAAnC,EAAwC;EAC3C,IAAI;IAAEP,GAAF;IAAOG,KAAP;IAAcC;EAAd,IAAuBV,iBAAiB,CAACY,KAAD,CAA5C;;EACA,IAAIC,OAAO,GAAG,CAAd,EAAiB;IACbP,GAAG,IAAI,IAAIO,OAAX;IACAJ,KAAK,IAAI,IAAII,OAAb;IACAH,IAAI,IAAI,IAAIG,OAAZ;EACH,CAJD,MAKK;IACD,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASH,OAAT,CAAd;IACAP,GAAG,IAAI,CAAC,MAAMA,GAAP,IAAcS,IAAI,CAACC,GAAL,CAASH,OAAT,CAArB;IACAJ,KAAK,IAAI,CAAC,MAAMA,KAAP,IAAgBK,KAAzB;IACAJ,IAAI,IAAI,CAAC,MAAMA,IAAP,IAAeI,KAAvB;EACH;;EACD,OAAQ,OAAMC,IAAI,CAACE,KAAL,CAAWX,GAAX,CAAgB,KAAIS,IAAI,CAACE,KAAL,CAAWR,KAAX,CAAkB,KAAIM,IAAI,CAACE,KAAL,CAAWP,IAAX,CAAiB,GAAzE;AACH;AACD,OAAO,SAASQ,OAAT,CAAiBN,KAAjB,EAAwBC,OAAO,GAAG,GAAlC,EAAuC;EAC1C,OAAOF,QAAQ,CAACC,KAAD,EAAQ,CAACC,OAAT,CAAf;AACH;AACD,OAAO,SAASM,MAAT,CAAgBP,KAAhB,EAAuBC,OAAO,GAAG,GAAjC,EAAsC;EACzC,OAAOF,QAAQ,CAACC,KAAD,EAAQC,OAAR,CAAf;AACH"},"metadata":{},"sourceType":"module"}