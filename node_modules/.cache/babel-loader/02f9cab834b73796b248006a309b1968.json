{"ast":null,"code":"import { h, ref, Teleport, onUnmounted } from 'vue';\nimport { NOOP } from '@vue/shared';\nimport isServer from 'element-plus/es/utils/isServer';\nimport { createGlobalNode, removeGlobalNode } from 'element-plus/es/utils/global-nodes';\nexport default ((contentRenderer, appendToBody) => {\n  const isTeleportVisible = ref(false);\n\n  if (isServer) {\n    return {\n      isTeleportVisible,\n      showTeleport: NOOP,\n      hideTeleport: NOOP,\n      renderTeleport: NOOP\n    };\n  }\n\n  let $el = null;\n\n  const showTeleport = () => {\n    isTeleportVisible.value = true;\n    if ($el !== null) return;\n    $el = createGlobalNode();\n  };\n\n  const hideTeleport = () => {\n    isTeleportVisible.value = false;\n\n    if ($el !== null) {\n      removeGlobalNode($el);\n      $el = null;\n    }\n  };\n\n  const renderTeleport = () => {\n    return appendToBody.value !== true ? contentRenderer() : isTeleportVisible.value ? [h(Teleport, {\n      to: $el\n    }, contentRenderer())] : undefined;\n  };\n\n  onUnmounted(hideTeleport);\n  return {\n    isTeleportVisible,\n    showTeleport,\n    hideTeleport,\n    renderTeleport\n  };\n});","map":{"version":3,"names":["h","ref","Teleport","onUnmounted","NOOP","isServer","createGlobalNode","removeGlobalNode","contentRenderer","appendToBody","isTeleportVisible","showTeleport","hideTeleport","renderTeleport","$el","value","to","undefined"],"sources":["/home/haibara/ghq/github.com/w-haibara/kakemoti-ui/node_modules/element-plus/es/hooks/use-teleport/index.js"],"sourcesContent":["import { h, ref, Teleport, onUnmounted } from 'vue';\nimport { NOOP } from '@vue/shared';\nimport isServer from 'element-plus/es/utils/isServer';\nimport { createGlobalNode, removeGlobalNode, } from 'element-plus/es/utils/global-nodes';\nexport default (contentRenderer, appendToBody) => {\n    const isTeleportVisible = ref(false);\n    if (isServer) {\n        return {\n            isTeleportVisible,\n            showTeleport: NOOP,\n            hideTeleport: NOOP,\n            renderTeleport: NOOP,\n        };\n    }\n    let $el = null;\n    const showTeleport = () => {\n        isTeleportVisible.value = true;\n        if ($el !== null)\n            return;\n        $el = createGlobalNode();\n    };\n    const hideTeleport = () => {\n        isTeleportVisible.value = false;\n        if ($el !== null) {\n            removeGlobalNode($el);\n            $el = null;\n        }\n    };\n    const renderTeleport = () => {\n        return appendToBody.value !== true\n            ? contentRenderer()\n            : isTeleportVisible.value\n                ? [h(Teleport, { to: $el }, contentRenderer())]\n                : undefined;\n    };\n    onUnmounted(hideTeleport);\n    return {\n        isTeleportVisible,\n        showTeleport,\n        hideTeleport,\n        renderTeleport,\n    };\n};\n"],"mappings":"AAAA,SAASA,CAAT,EAAYC,GAAZ,EAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,KAA9C;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAoD,oCAApD;AACA,gBAAe,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;EAC9C,MAAMC,iBAAiB,GAAGT,GAAG,CAAC,KAAD,CAA7B;;EACA,IAAII,QAAJ,EAAc;IACV,OAAO;MACHK,iBADG;MAEHC,YAAY,EAAEP,IAFX;MAGHQ,YAAY,EAAER,IAHX;MAIHS,cAAc,EAAET;IAJb,CAAP;EAMH;;EACD,IAAIU,GAAG,GAAG,IAAV;;EACA,MAAMH,YAAY,GAAG,MAAM;IACvBD,iBAAiB,CAACK,KAAlB,GAA0B,IAA1B;IACA,IAAID,GAAG,KAAK,IAAZ,EACI;IACJA,GAAG,GAAGR,gBAAgB,EAAtB;EACH,CALD;;EAMA,MAAMM,YAAY,GAAG,MAAM;IACvBF,iBAAiB,CAACK,KAAlB,GAA0B,KAA1B;;IACA,IAAID,GAAG,KAAK,IAAZ,EAAkB;MACdP,gBAAgB,CAACO,GAAD,CAAhB;MACAA,GAAG,GAAG,IAAN;IACH;EACJ,CAND;;EAOA,MAAMD,cAAc,GAAG,MAAM;IACzB,OAAOJ,YAAY,CAACM,KAAb,KAAuB,IAAvB,GACDP,eAAe,EADd,GAEDE,iBAAiB,CAACK,KAAlB,GACI,CAACf,CAAC,CAACE,QAAD,EAAW;MAAEc,EAAE,EAAEF;IAAN,CAAX,EAAwBN,eAAe,EAAvC,CAAF,CADJ,GAEIS,SAJV;EAKH,CAND;;EAOAd,WAAW,CAACS,YAAD,CAAX;EACA,OAAO;IACHF,iBADG;IAEHC,YAFG;IAGHC,YAHG;IAIHC;EAJG,CAAP;AAMH,CAtCD"},"metadata":{},"sourceType":"module"}