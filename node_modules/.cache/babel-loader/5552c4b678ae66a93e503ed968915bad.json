{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { warn } from 'vue';\nimport { isObject } from '@vue/shared';\nimport fromPairs from 'lodash/fromPairs';\nconst wrapperKey = Symbol();\nexport const propKey = Symbol();\nexport function buildProp(option, key) {\n  if (!isObject(option) || !!option[propKey]) return option;\n  const {\n    values,\n    required,\n    default: defaultValue,\n    type,\n    validator\n  } = option;\n\n  const _validator = values || validator ? val => {\n    let valid = false;\n    let allowedValues = [];\n\n    if (values) {\n      allowedValues = [...values, defaultValue];\n      valid || (valid = allowedValues.includes(val));\n    }\n\n    if (validator) valid || (valid = validator(val));\n\n    if (!valid && allowedValues.length > 0) {\n      const allowValuesText = [...new Set(allowedValues)].map(value => JSON.stringify(value)).join(', ');\n      warn(`Invalid prop: validation failed${key ? ` for prop \"${key}\"` : ''}. Expected one of [${allowValuesText}], got value ${JSON.stringify(val)}.`);\n    }\n\n    return valid;\n  } : undefined;\n\n  return {\n    type: typeof type === 'object' && Object.getOwnPropertySymbols(type).includes(wrapperKey) ? type[wrapperKey] : type,\n    required: !!required,\n    default: defaultValue,\n    validator: _validator,\n    [propKey]: true\n  };\n}\nexport const buildProps = props => fromPairs(Object.entries(props).map(([key, option]) => [key, buildProp(option, key)]));\nexport const definePropType = val => ({\n  [wrapperKey]: val\n});\nexport const keyOf = arr => Object.keys(arr);\nexport const mutable = val => val;\nexport const componentSize = ['large', 'medium', 'small', 'mini'];","map":{"version":3,"names":["warn","isObject","fromPairs","wrapperKey","Symbol","propKey","buildProp","option","key","values","required","default","defaultValue","type","validator","_validator","val","valid","allowedValues","includes","length","allowValuesText","Set","map","value","JSON","stringify","join","undefined","Object","getOwnPropertySymbols","buildProps","props","entries","definePropType","keyOf","arr","keys","mutable","componentSize"],"sources":["/home/haibara/ghq/github.com/w-haibara/kakemoti-ui/node_modules/element-plus/es/utils/props.js"],"sourcesContent":["import { warn } from 'vue';\nimport { isObject } from '@vue/shared';\nimport fromPairs from 'lodash/fromPairs';\nconst wrapperKey = Symbol();\nexport const propKey = Symbol();\nexport function buildProp(option, key) {\n    if (!isObject(option) || !!option[propKey])\n        return option;\n    const { values, required, default: defaultValue, type, validator } = option;\n    const _validator = values || validator\n        ? (val) => {\n            let valid = false;\n            let allowedValues = [];\n            if (values) {\n                allowedValues = [...values, defaultValue];\n                valid || (valid = allowedValues.includes(val));\n            }\n            if (validator)\n                valid || (valid = validator(val));\n            if (!valid && allowedValues.length > 0) {\n                const allowValuesText = [...new Set(allowedValues)]\n                    .map((value) => JSON.stringify(value))\n                    .join(', ');\n                warn(`Invalid prop: validation failed${key ? ` for prop \"${key}\"` : ''}. Expected one of [${allowValuesText}], got value ${JSON.stringify(val)}.`);\n            }\n            return valid;\n        }\n        : undefined;\n    return {\n        type: typeof type === 'object' &&\n            Object.getOwnPropertySymbols(type).includes(wrapperKey)\n            ? type[wrapperKey]\n            : type,\n        required: !!required,\n        default: defaultValue,\n        validator: _validator,\n        [propKey]: true,\n    };\n}\nexport const buildProps = (props) => fromPairs(Object.entries(props).map(([key, option]) => [\n    key,\n    buildProp(option, key),\n]));\nexport const definePropType = (val) => ({ [wrapperKey]: val });\nexport const keyOf = (arr) => Object.keys(arr);\nexport const mutable = (val) => val;\nexport const componentSize = ['large', 'medium', 'small', 'mini'];\n"],"mappings":";AAAA,SAASA,IAAT,QAAqB,KAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,MAAMC,UAAU,GAAGC,MAAM,EAAzB;AACA,OAAO,MAAMC,OAAO,GAAGD,MAAM,EAAtB;AACP,OAAO,SAASE,SAAT,CAAmBC,MAAnB,EAA2BC,GAA3B,EAAgC;EACnC,IAAI,CAACP,QAAQ,CAACM,MAAD,CAAT,IAAqB,CAAC,CAACA,MAAM,CAACF,OAAD,CAAjC,EACI,OAAOE,MAAP;EACJ,MAAM;IAAEE,MAAF;IAAUC,QAAV;IAAoBC,OAAO,EAAEC,YAA7B;IAA2CC,IAA3C;IAAiDC;EAAjD,IAA+DP,MAArE;;EACA,MAAMQ,UAAU,GAAGN,MAAM,IAAIK,SAAV,GACZE,GAAD,IAAS;IACP,IAAIC,KAAK,GAAG,KAAZ;IACA,IAAIC,aAAa,GAAG,EAApB;;IACA,IAAIT,MAAJ,EAAY;MACRS,aAAa,GAAG,CAAC,GAAGT,MAAJ,EAAYG,YAAZ,CAAhB;MACAK,KAAK,KAAKA,KAAK,GAAGC,aAAa,CAACC,QAAd,CAAuBH,GAAvB,CAAb,CAAL;IACH;;IACD,IAAIF,SAAJ,EACIG,KAAK,KAAKA,KAAK,GAAGH,SAAS,CAACE,GAAD,CAAtB,CAAL;;IACJ,IAAI,CAACC,KAAD,IAAUC,aAAa,CAACE,MAAd,GAAuB,CAArC,EAAwC;MACpC,MAAMC,eAAe,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQJ,aAAR,CAAJ,EACnBK,GADmB,CACdC,KAAD,IAAWC,IAAI,CAACC,SAAL,CAAeF,KAAf,CADI,EAEnBG,IAFmB,CAEd,IAFc,CAAxB;MAGA3B,IAAI,CAAE,kCAAiCQ,GAAG,GAAI,cAAaA,GAAI,GAArB,GAA0B,EAAG,sBAAqBa,eAAgB,gBAAeI,IAAI,CAACC,SAAL,CAAeV,GAAf,CAAoB,GAA3I,CAAJ;IACH;;IACD,OAAOC,KAAP;EACH,CAjBc,GAkBbW,SAlBN;;EAmBA,OAAO;IACHf,IAAI,EAAE,OAAOA,IAAP,KAAgB,QAAhB,IACFgB,MAAM,CAACC,qBAAP,CAA6BjB,IAA7B,EAAmCM,QAAnC,CAA4ChB,UAA5C,CADE,GAEAU,IAAI,CAACV,UAAD,CAFJ,GAGAU,IAJH;IAKHH,QAAQ,EAAE,CAAC,CAACA,QALT;IAMHC,OAAO,EAAEC,YANN;IAOHE,SAAS,EAAEC,UAPR;IAQH,CAACV,OAAD,GAAW;EARR,CAAP;AAUH;AACD,OAAO,MAAM0B,UAAU,GAAIC,KAAD,IAAW9B,SAAS,CAAC2B,MAAM,CAACI,OAAP,CAAeD,KAAf,EAAsBT,GAAtB,CAA0B,CAAC,CAACf,GAAD,EAAMD,MAAN,CAAD,KAAmB,CACxFC,GADwF,EAExFF,SAAS,CAACC,MAAD,EAASC,GAAT,CAF+E,CAA7C,CAAD,CAAvC;AAIP,OAAO,MAAM0B,cAAc,GAAIlB,GAAD,KAAU;EAAE,CAACb,UAAD,GAAca;AAAhB,CAAV,CAAvB;AACP,OAAO,MAAMmB,KAAK,GAAIC,GAAD,IAASP,MAAM,CAACQ,IAAP,CAAYD,GAAZ,CAAvB;AACP,OAAO,MAAME,OAAO,GAAItB,GAAD,IAASA,GAAzB;AACP,OAAO,MAAMuB,aAAa,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,MAA7B,CAAtB"},"metadata":{},"sourceType":"module"}