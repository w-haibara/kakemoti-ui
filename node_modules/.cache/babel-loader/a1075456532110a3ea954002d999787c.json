{"ast":null,"code":"import { defineComponent, ref, getCurrentInstance, nextTick, onMounted } from \"vue\";\nimport nodeHeader from \"./nodeHeader.vue\";\nimport { ElMessageBox } from \"element-plus\";\nexport default defineComponent({\n  components: {\n    nodeHeader\n  },\n\n  setup() {\n    const el = ref(null);\n    const textarea = ref(\"\");\n    let df = null;\n    const nodeId = ref(0);\n    const dataNode = ref({});\n    const drawer = ref(false);\n    const direction = ref(\"rtl\");\n\n    const handleClose = done => {\n      ElMessageBox.confirm(\"Are you sure you want to close this?\").then(() => {\n        done();\n      }).catch(() => {// catch error\n      });\n    };\n\n    df = getCurrentInstance().appContext.config.globalProperties.$df.value;\n\n    const updateSelect = value => {\n      dataNode.value.data.script = value;\n      df.updateNodeDataFromId(nodeId.value, dataNode.value);\n    };\n\n    onMounted(async () => {\n      await nextTick();\n      nodeId.value = el.value.parentElement.parentElement.id.slice(5);\n      dataNode.value = df.getNodeFromId(nodeId.value);\n      textarea.value = dataNode.value.data.script;\n    });\n    return {\n      el,\n      drawer,\n      direction,\n      handleClose,\n      textarea,\n      updateSelect\n    };\n  }\n\n});","map":{"version":3,"mappings":"AA2BA,SACEA,eADF,EAEEC,GAFF,EAGEC,kBAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,KANP;AAOA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,eAAeN,eAAe,CAAC;EAC7BO,UAAU,EAAE;IACVF;EADU,CADiB;;EAI7BG,KAAK,GAAG;IACN,MAAMC,EAAC,GAAIR,GAAG,CAAC,IAAD,CAAd;IACA,MAAMS,QAAO,GAAIT,GAAG,CAAC,EAAD,CAApB;IACA,IAAIU,EAAC,GAAI,IAAT;IACA,MAAMC,MAAK,GAAIX,GAAG,CAAC,CAAD,CAAlB;IACA,MAAMY,QAAO,GAAIZ,GAAG,CAAC,EAAD,CAApB;IACA,MAAMa,MAAK,GAAIb,GAAG,CAAC,KAAD,CAAlB;IACA,MAAMc,SAAQ,GAAId,GAAG,CAAC,KAAD,CAArB;;IACA,MAAMe,WAAU,GAAKC,IAAD,IAAU;MAC5BX,YAAY,CAACY,OAAb,CAAqB,sCAArB,EACGC,IADH,CACQ,MAAM;QACVF,IAAI;MACL,CAHH,EAIGG,KAJH,CAIS,MAAM,CACX;MACD,CANH;IAOD,CARD;;IASAT,EAAC,GAAIT,kBAAkB,GAAGmB,UAArB,CAAgCC,MAAhC,CAAuCC,gBAAvC,CAAwDC,GAAxD,CAA4DC,KAAjE;;IAEA,MAAMC,YAAW,GAAKD,KAAD,IAAW;MAC9BZ,QAAQ,CAACY,KAAT,CAAeE,IAAf,CAAoBC,MAApB,GAA6BH,KAA7B;MACAd,EAAE,CAACkB,oBAAH,CAAwBjB,MAAM,CAACa,KAA/B,EAAsCZ,QAAQ,CAACY,KAA/C;IACD,CAHD;;IAKArB,SAAS,CAAC,YAAY;MACpB,MAAMD,QAAQ,EAAd;MACAS,MAAM,CAACa,KAAP,GAAehB,EAAE,CAACgB,KAAH,CAASK,aAAT,CAAuBA,aAAvB,CAAqCC,EAArC,CAAwCC,KAAxC,CAA8C,CAA9C,CAAf;MACAnB,QAAQ,CAACY,KAAT,GAAiBd,EAAE,CAACsB,aAAH,CAAiBrB,MAAM,CAACa,KAAxB,CAAjB;MACAf,QAAQ,CAACe,KAAT,GAAiBZ,QAAQ,CAACY,KAAT,CAAeE,IAAf,CAAoBC,MAArC;IACD,CALQ,CAAT;IAOA,OAAO;MACLnB,EADK;MAELK,MAFK;MAGLC,SAHK;MAILC,WAJK;MAKLN,QALK;MAMLgB;IANK,CAAP;EAQD;;AA3C4B,CAAD,CAA9B","names":["defineComponent","ref","getCurrentInstance","nextTick","onMounted","nodeHeader","ElMessageBox","components","setup","el","textarea","df","nodeId","dataNode","drawer","direction","handleClose","done","confirm","then","catch","appContext","config","globalProperties","$df","value","updateSelect","data","script","updateNodeDataFromId","parentElement","id","slice","getNodeFromId"],"sourceRoot":"","sources":["/home/haibara/ghq/github.com/w-haibara/kakemoti-ui/src/components/nodes/nodeTwo.vue"],"sourcesContent":["<template>\n  <div ref=\"el\">\n    <nodeHeader title=\"Script\" />\n    <p>Open in navbar</p>\n    <el-button type=\"info\" size=\"small\" @click=\"drawer = true\">Edit</el-button>\n    <teleport to=\"body\">\n      <el-drawer\n        v-model=\"drawer\"\n        title=\"Edit Optinos\"\n        :direction=\"direction\"\n        :before-close=\"handleClose\"\n      >\n        <p>Autosave</p>\n        <el-input\n          v-model=\"textarea\"\n          :rows=\"8\"\n          df-script\n          @change=\"updateSelect\"\n          type=\"textarea\"\n          placeholder=\"Please input\"\n        />\n      </el-drawer>\n    </teleport>\n  </div>\n</template>\n\n<script>\nimport {\n  defineComponent,\n  ref,\n  getCurrentInstance,\n  nextTick,\n  onMounted,\n} from \"vue\";\nimport nodeHeader from \"./nodeHeader.vue\";\nimport { ElMessageBox } from \"element-plus\";\n\nexport default defineComponent({\n  components: {\n    nodeHeader,\n  },\n  setup() {\n    const el = ref(null);\n    const textarea = ref(\"\");\n    let df = null;\n    const nodeId = ref(0);\n    const dataNode = ref({});\n    const drawer = ref(false);\n    const direction = ref(\"rtl\");\n    const handleClose = (done) => {\n      ElMessageBox.confirm(\"Are you sure you want to close this?\")\n        .then(() => {\n          done();\n        })\n        .catch(() => {\n          // catch error\n        });\n    };\n    df = getCurrentInstance().appContext.config.globalProperties.$df.value;\n\n    const updateSelect = (value) => {\n      dataNode.value.data.script = value;\n      df.updateNodeDataFromId(nodeId.value, dataNode.value);\n    };\n\n    onMounted(async () => {\n      await nextTick();\n      nodeId.value = el.value.parentElement.parentElement.id.slice(5);\n      dataNode.value = df.getNodeFromId(nodeId.value);\n      textarea.value = dataNode.value.data.script;\n    });\n\n    return {\n      el,\n      drawer,\n      direction,\n      handleClose,\n      textarea,\n      updateSelect,\n    };\n  },\n});\n</script>\n<style scoped>\np {\n  margin: 5px;\n  margin-bottom: 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}