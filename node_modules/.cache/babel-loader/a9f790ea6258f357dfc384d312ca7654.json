{"ast":null,"code":"import { computed, getCurrentInstance, watch, onMounted } from 'vue';\nimport { isFunction } from '@vue/shared';\nimport { isBool } from 'element-plus/es/utils/util';\nimport { UPDATE_MODEL_EVENT } from 'element-plus/es/utils/constants';\nimport isServer from 'element-plus/es/utils/isServer';\nexport const useModelToggleProps = {\n  modelValue: {\n    type: Boolean,\n    default: null\n  },\n  'onUpdate:modelValue': Function\n};\nexport const useModelToggleEmits = [UPDATE_MODEL_EVENT];\nexport const useModelToggle = ({\n  indicator,\n  shouldHideWhenRouteChanges,\n  shouldProceed,\n  onShow,\n  onHide\n}) => {\n  const {\n    appContext,\n    props,\n    proxy,\n    emit\n  } = getCurrentInstance();\n  const hasUpdateHandler = computed(() => isFunction(props['onUpdate:modelValue']));\n  const isModelBindingAbsent = computed(() => props.modelValue === null);\n\n  const doShow = () => {\n    if (indicator.value === true) {\n      return;\n    }\n\n    indicator.value = true;\n\n    if (isFunction(onShow)) {\n      onShow();\n    }\n  };\n\n  const doHide = () => {\n    if (indicator.value === false) {\n      return;\n    }\n\n    indicator.value = false;\n\n    if (isFunction(onHide)) {\n      onHide();\n    }\n  };\n\n  const show = () => {\n    if (props.disabled === true || isFunction(shouldProceed) && !shouldProceed()) return;\n    const shouldEmit = hasUpdateHandler.value && !isServer;\n\n    if (shouldEmit) {\n      emit(UPDATE_MODEL_EVENT, true);\n    }\n\n    if (isModelBindingAbsent.value || !shouldEmit) {\n      doShow();\n    }\n  };\n\n  const hide = () => {\n    if (props.disabled === true || isServer) return;\n    const shouldEmit = hasUpdateHandler.value && !isServer;\n\n    if (shouldEmit) {\n      emit(UPDATE_MODEL_EVENT, false);\n    }\n\n    if (isModelBindingAbsent.value || !shouldEmit) {\n      doHide();\n    }\n  };\n\n  const onChange = val => {\n    if (!isBool(val)) return;\n\n    if (props.disabled && val) {\n      if (hasUpdateHandler.value) {\n        emit(UPDATE_MODEL_EVENT, false);\n      }\n    } else if (indicator.value !== val) {\n      if (val) {\n        doShow();\n      } else {\n        doHide();\n      }\n    }\n  };\n\n  const toggle = () => {\n    if (indicator.value) {\n      hide();\n    } else {\n      show();\n    }\n  };\n\n  watch(() => props.modelValue, onChange);\n\n  if (shouldHideWhenRouteChanges && appContext.config.globalProperties.$route !== undefined) {\n    watch(() => Object.assign({}, proxy.$route), () => {\n      if (shouldHideWhenRouteChanges.value && indicator.value) {\n        hide();\n      }\n    });\n  }\n\n  onMounted(() => {\n    onChange(props.modelValue);\n  });\n  return {\n    hide,\n    show,\n    toggle\n  };\n};","map":{"version":3,"names":["computed","getCurrentInstance","watch","onMounted","isFunction","isBool","UPDATE_MODEL_EVENT","isServer","useModelToggleProps","modelValue","type","Boolean","default","Function","useModelToggleEmits","useModelToggle","indicator","shouldHideWhenRouteChanges","shouldProceed","onShow","onHide","appContext","props","proxy","emit","hasUpdateHandler","isModelBindingAbsent","doShow","value","doHide","show","disabled","shouldEmit","hide","onChange","val","toggle","config","globalProperties","$route","undefined","Object","assign"],"sources":["/home/haibara/ghq/github.com/w-haibara/kakemoti-ui/node_modules/element-plus/es/hooks/use-model-toggle/index.js"],"sourcesContent":["import { computed, getCurrentInstance, watch, onMounted } from 'vue';\nimport { isFunction } from '@vue/shared';\nimport { isBool } from 'element-plus/es/utils/util';\nimport { UPDATE_MODEL_EVENT } from 'element-plus/es/utils/constants';\nimport isServer from 'element-plus/es/utils/isServer';\nexport const useModelToggleProps = {\n    modelValue: {\n        type: Boolean,\n        default: null,\n    },\n    'onUpdate:modelValue': Function,\n};\nexport const useModelToggleEmits = [UPDATE_MODEL_EVENT];\nexport const useModelToggle = ({ indicator, shouldHideWhenRouteChanges, shouldProceed, onShow, onHide, }) => {\n    const { appContext, props, proxy, emit } = getCurrentInstance();\n    const hasUpdateHandler = computed(() => isFunction(props['onUpdate:modelValue']));\n    const isModelBindingAbsent = computed(() => props.modelValue === null);\n    const doShow = () => {\n        if (indicator.value === true) {\n            return;\n        }\n        indicator.value = true;\n        if (isFunction(onShow)) {\n            onShow();\n        }\n    };\n    const doHide = () => {\n        if (indicator.value === false) {\n            return;\n        }\n        indicator.value = false;\n        if (isFunction(onHide)) {\n            onHide();\n        }\n    };\n    const show = () => {\n        if (props.disabled === true ||\n            (isFunction(shouldProceed) && !shouldProceed()))\n            return;\n        const shouldEmit = hasUpdateHandler.value && !isServer;\n        if (shouldEmit) {\n            emit(UPDATE_MODEL_EVENT, true);\n        }\n        if (isModelBindingAbsent.value || !shouldEmit) {\n            doShow();\n        }\n    };\n    const hide = () => {\n        if (props.disabled === true || isServer)\n            return;\n        const shouldEmit = hasUpdateHandler.value && !isServer;\n        if (shouldEmit) {\n            emit(UPDATE_MODEL_EVENT, false);\n        }\n        if (isModelBindingAbsent.value || !shouldEmit) {\n            doHide();\n        }\n    };\n    const onChange = (val) => {\n        if (!isBool(val))\n            return;\n        if (props.disabled && val) {\n            if (hasUpdateHandler.value) {\n                emit(UPDATE_MODEL_EVENT, false);\n            }\n        }\n        else if (indicator.value !== val) {\n            if (val) {\n                doShow();\n            }\n            else {\n                doHide();\n            }\n        }\n    };\n    const toggle = () => {\n        if (indicator.value) {\n            hide();\n        }\n        else {\n            show();\n        }\n    };\n    watch(() => props.modelValue, onChange);\n    if (shouldHideWhenRouteChanges &&\n        appContext.config.globalProperties.$route !== undefined) {\n        watch(() => (Object.assign({}, proxy.$route)), () => {\n            if (shouldHideWhenRouteChanges.value && indicator.value) {\n                hide();\n            }\n        });\n    }\n    onMounted(() => {\n        onChange(props.modelValue);\n    });\n    return {\n        hide,\n        show,\n        toggle,\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}