{"ast":null,"code":"import { defineComponent, onMounted, getCurrentInstance, readonly, ref, nextTick } from 'vue';\nimport nodeHeader from './nodeHeader.vue';\nexport default defineComponent({\n  components: {\n    nodeHeader\n  },\n\n  setup() {\n    const el = ref(null);\n    const nodeId = ref(0);\n    let df = null;\n    const url = ref('');\n    const method = ref('get');\n    const dataNode = ref({});\n    const options = readonly([{\n      value: 'get',\n      label: 'GET'\n    }, {\n      value: 'post',\n      label: 'POST'\n    }]);\n    df = getCurrentInstance().appContext.config.globalProperties.$df.value;\n\n    const updateSelect = value => {\n      dataNode.value.data.method = value;\n      df.updateNodeDataFromId(nodeId.value, dataNode.value);\n    };\n\n    onMounted(async () => {\n      await nextTick();\n      nodeId.value = el.value.parentElement.parentElement.id.slice(5);\n      dataNode.value = df.getNodeFromId(nodeId.value);\n      url.value = dataNode.value.data.url;\n      method.value = dataNode.value.data.method;\n    });\n    return {\n      el,\n      url,\n      method,\n      options,\n      updateSelect\n    };\n  }\n\n});","map":{"version":3,"mappings":"AAoBA,SAASA,eAAT,EAA0BC,SAA1B,EAAqCC,kBAArC,EAAyDC,QAAzD,EAAmEC,GAAnE,EAAwEC,QAAxE,QAAwF,KAAxF;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,eAAeN,eAAe,CAAC;EAC3BO,UAAU,EAAE;IACRD;EADQ,CADe;;EAI3BE,KAAK,GAAG;IACJ,MAAMC,EAAC,GAAIL,GAAG,CAAC,IAAD,CAAd;IACA,MAAMM,MAAK,GAAIN,GAAG,CAAC,CAAD,CAAlB;IACA,IAAIO,EAAC,GAAI,IAAT;IACA,MAAMC,GAAE,GAAIR,GAAG,CAAC,EAAD,CAAf;IACA,MAAMS,MAAK,GAAIT,GAAG,CAAC,KAAD,CAAlB;IACA,MAAMU,QAAO,GAAIV,GAAG,CAAC,EAAD,CAApB;IACA,MAAMW,OAAM,GAAIZ,QAAQ,CAAC,CACrB;MACIa,KAAK,EAAE,KADX;MAEIC,KAAK,EAAE;IAFX,CADqB,EAKrB;MACID,KAAK,EAAE,MADX;MAEIC,KAAK,EAAE;IAFX,CALqB,CAAD,CAAxB;IAWAN,EAAC,GAAIT,kBAAkB,GAAGgB,UAArB,CAAgCC,MAAhC,CAAuCC,gBAAvC,CAAwDC,GAAxD,CAA4DL,KAAjE;;IAEA,MAAMM,YAAW,GAAKN,KAAD,IAAW;MAC5BF,QAAQ,CAACE,KAAT,CAAeO,IAAf,CAAoBV,MAApB,GAA6BG,KAA7B;MACAL,EAAE,CAACa,oBAAH,CAAwBd,MAAM,CAACM,KAA/B,EAAsCF,QAAQ,CAACE,KAA/C;IACJ,CAHA;;IAMAf,SAAS,CAAC,YAAY;MAClB,MAAMI,QAAQ,EAAd;MACAK,MAAM,CAACM,KAAP,GAAeP,EAAE,CAACO,KAAH,CAASS,aAAT,CAAuBA,aAAvB,CAAqCC,EAArC,CAAwCC,KAAxC,CAA8C,CAA9C,CAAf;MACAb,QAAQ,CAACE,KAAT,GAAiBL,EAAE,CAACiB,aAAH,CAAiBlB,MAAM,CAACM,KAAxB,CAAjB;MAEAJ,GAAG,CAACI,KAAJ,GAAYF,QAAQ,CAACE,KAAT,CAAeO,IAAf,CAAoBX,GAAhC;MACAC,MAAM,CAACG,KAAP,GAAeF,QAAQ,CAACE,KAAT,CAAeO,IAAf,CAAoBV,MAAnC;IACH,CAPQ,CAAT;IASA,OAAO;MACHJ,EADG;MACCG,GADD;MACMC,MADN;MACcE,OADd;MACuBO;IADvB,CAAP;EAIJ;;AA3C2B,CAAD,CAA9B","names":["defineComponent","onMounted","getCurrentInstance","readonly","ref","nextTick","nodeHeader","components","setup","el","nodeId","df","url","method","dataNode","options","value","label","appContext","config","globalProperties","$df","updateSelect","data","updateNodeDataFromId","parentElement","id","slice","getNodeFromId"],"sourceRoot":"","sources":["/home/haibara/ghq/github.com/w-haibara/kakemoti-ui/src/components/nodes/node1.vue"],"sourcesContent":["<template>\n    <div ref=\"el\">\n        <nodeHeader  title=\"Get/Post\"/>\n        <el-select v-model=\"method\" placeholder=\"Select\" @change=\"updateSelect\" size=\"small\" df-method>\n        <el-option\n        v-for=\"item in options\"\n        :key=\"item.value\"\n        :label=\"item.label\"\n        :value=\"item.value\"\n        >\n        </el-option>\n    </el-select>\n    <br><br>\n        <el-input v-model=\"url\" df-url placeholder=\"Please input\" size=\"small\">\n        <template #prepend>https://</template>\n        </el-input>\n    </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted, getCurrentInstance, readonly, ref, nextTick } from 'vue'\nimport nodeHeader from './nodeHeader.vue'\n\nexport default defineComponent({\n    components: {\n        nodeHeader\n    },\n    setup() {\n        const el = ref(null);\n        const nodeId = ref(0);\n        let df = null\n        const url = ref('');\n        const method = ref('get');\n        const dataNode = ref({});\n        const options = readonly([\n            {\n                value: 'get',\n                label: 'GET'\n            },\n            {\n                value: 'post',\n                label: 'POST'\n            }\n        ]);\n        \n        df = getCurrentInstance().appContext.config.globalProperties.$df.value;\n\n        const updateSelect = (value) => {\n            dataNode.value.data.method = value;\n            df.updateNodeDataFromId(nodeId.value, dataNode.value);\n        }\n        \n        \n        onMounted(async () => {\n            await nextTick()\n            nodeId.value = el.value.parentElement.parentElement.id.slice(5)\n            dataNode.value = df.getNodeFromId(nodeId.value)\n            \n            url.value = dataNode.value.data.url;\n            method.value = dataNode.value.data.method;\n        });\n        \n        return {\n            el, url, method, options, updateSelect\n        }\n\n    }    \n    \n})\n</script>\n"]},"metadata":{},"sourceType":"module"}